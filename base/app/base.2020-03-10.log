2020-03-10 13:58:53.473 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 14608 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 13:58:53.503 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 13:58:59.354 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
2020-03-10 13:58:59.422 [restartedMain] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2020-03-10 13:59:00.013 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81i41rnv1sll1ai|68000636, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81i41rnv1sll1ai|68000636, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 13:59:10.789 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 13:59:12.335 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 13:59:12.367 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 13:59:12.368 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 13:59:12.726 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 13:59:16.297 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 13:59:16.345 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 24.728 seconds (JVM running for 29.819)
2020-03-10 13:59:43.216 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 13:59:43.457 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 13:59:43.678 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 13:59:43.939 [http-nio-8080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.wxinnb.maomao.domain.Product with id 10; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.wxinnb.maomao.domain.Product with id 10] with root cause
javax.persistence.EntityNotFoundException: Unable to find com.wxinnb.maomao.domain.Product with id 10
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$JpaEntityNotFoundDelegate.handleEntityNotFound(EntityManagerFactoryBuilderImpl.java:162)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:234)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:350)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:127)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:93)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1288)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1276)
	at org.hibernate.internal.SessionImpl.access$2000(SessionImpl.java:208)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doGetReference(SessionImpl.java:2857)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.getReference(SessionImpl.java:2836)
	at org.hibernate.internal.SessionImpl.getReference(SessionImpl.java:3597)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:351)
	at com.sun.proxy.$Proxy94.getReference(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:310)
	at com.sun.proxy.$Proxy94.getReference(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.getOne(SimpleJpaRepository.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy113.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.ProductServiceImpl.getProductById(ProductServiceImpl.java:46)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 14:01:37.867 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 12664 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 14:01:37.871 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 14:01:40.662 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
2020-03-10 14:01:40.720 [restartedMain] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2020-03-10 14:01:41.028 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81i4584f1lpufpn|c38e881, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81i4584f1lpufpn|c38e881, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 14:01:46.133 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 14:01:47.004 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 14:01:47.018 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 14:01:47.018 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 14:01:47.317 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 14:01:49.981 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 14:01:50.031 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 13.645 seconds (JVM running for 18.26)
2020-03-10 14:05:09.195 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 14:05:09.396 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:05:09.642 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:05:09.891 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:05:11.948 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:09:07.212 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 23136 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 14:09:07.221 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 14:09:10.338 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
2020-03-10 14:09:10.396 [restartedMain] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2020-03-10 14:09:10.784 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81i4ev3j8vac37|523155c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81i4ev3j8vac37|523155c9, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 14:09:19.600 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 14:09:21.271 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 14:09:21.286 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 14:09:21.287 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 14:09:21.575 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 14:09:24.128 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 14:09:24.168 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 18.288 seconds (JVM running for 22.842)
2020-03-10 14:09:36.592 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 14:09:36.894 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:09:37.282 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:09:37.645 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:09:37.775 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:12:35.985 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 4612 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 14:12:35.990 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 14:12:38.882 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
2020-03-10 14:12:38.938 [restartedMain] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2020-03-10 14:12:39.220 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81i4jc0a48s1ol|5421b741, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81i4jc0a48s1ol|5421b741, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 14:12:44.272 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 14:12:45.103 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 14:12:45.117 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 14:12:45.117 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 14:12:45.422 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 14:12:47.834 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 14:12:47.885 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 13.107 seconds (JVM running for 17.478)
2020-03-10 14:13:05.150 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 14:13:05.305 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:13:05.588 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:13:05.898 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:13:06.081 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:19:25.335 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:19:25.594 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:19:25.829 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:19:26.001 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:20:42.997 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:20:43.309 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:20:43.547 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:20:43.701 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:23:07.485 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:23:07.755 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:23:07.977 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:23:08.122 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:27:15.349 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 4612 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 14:27:15.350 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 14:27:16.516 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81i4jc0a48s1ol|761d843a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81i4jc0a48s1ol|761d843a, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 14:27:18.633 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 14:27:19.309 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 14:27:19.311 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 14:27:19.311 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 14:27:19.394 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 14:27:21.185 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 14:27:21.196 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 5.924 seconds (JVM running for 890.789)
2020-03-10 14:30:55.015 [http-nio-8080-exec-10] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 14:30:55.104 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:30:55.313 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:30:55.472 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:30:55.583 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:31:33.688 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:31:33.900 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:31:34.094 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:31:34.207 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:32:51.940 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:32:52.384 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:32:52.785 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:32:52.897 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:33:45.322 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:33:45.708 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:33:45.891 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:33:46.001 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:34:16.322 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:34:16.503 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:34:16.663 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:34:16.762 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:38:33.339 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:38:33.507 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:38:33.652 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:38:33.755 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:40:12.723 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:40:14.046 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:40:14.186 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:40:14.279 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 14:40:36.430 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 14:40:36.600 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 14:40:36.755 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 14:40:36.862 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:20:02.109 [http-nio-8080-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 2,363,197 milliseconds ago.  The last packet sent successfully to the server was 19,147 milliseconds ago.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:557)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:735)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:674)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy126.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 15:22:52.835 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:22:53.088 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:22:53.299 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:22:53.439 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:26:25.586 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:26:25.826 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:26:26.052 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:26:26.204 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:27:45.020 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:27:45.280 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:27:45.496 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:27:45.634 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:29:07.701 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:29:07.992 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:29:08.288 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:29:08.816 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:31:56.739 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:31:57.119 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:31:57.389 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:31:57.555 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:33:24.983 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:33:25.226 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:33:25.431 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:33:25.570 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:36:25.792 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:36:26.036 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:36:26.241 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:36:26.380 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:39:10.618 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:39:10.869 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:39:11.073 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:39:11.222 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:47:50.734 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:47:50.978 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:47:51.203 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:47:51.360 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:49:39.849 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:49:40.091 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:49:40.320 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:49:40.478 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:49:55.524 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:49:55.774 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:49:55.992 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:49:56.137 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:55:29.834 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:55:30.078 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:55:30.291 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:55:30.439 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 15:58:10.398 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 15:58:10.691 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 15:58:10.926 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 15:58:11.075 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:12:06.143 [http-nio-8080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 834,952 milliseconds ago.  The last packet sent successfully to the server was 19,283 milliseconds ago.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:557)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:735)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:674)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy126.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 16:12:41.691 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:12:41.933 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:12:42.125 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:12:42.254 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:15:10.715 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:15:10.957 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:15:11.156 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:15:11.287 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:21:32.466 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:21:32.700 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:21:32.893 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:21:33.035 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:23:32.344 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:23:32.599 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:23:32.803 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:23:32.934 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:23:53.454 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:23:53.681 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:23:53.883 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:23:54.013 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:29:11.939 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:29:12.217 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:29:12.666 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:29:12.931 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:29:28.432 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:29:29.043 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:29:29.318 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:29:30.103 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:33:37.219 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:33:37.449 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:33:37.648 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:33:37.779 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 16:36:58.287 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 16:36:58.525 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 16:36:58.725 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 16:36:58.855 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 17:15:40.100 [http-nio-8080-exec-3] WARN  com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2020-03-10 17:15:40.103 [http-nio-8080-exec-3] WARN  com.mchange.v2.c3p0.impl.NewPooledConnection - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No operations allowed after connection closed. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No operations allowed after connection closed.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:108)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:95)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:87)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:61)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:71)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2261)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1059)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:67)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:263)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:236)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:86)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:184)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy126.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.cj.exceptions.ConnectionIsClosedException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:59)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:103)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.NativeSession.checkClosed(NativeSession.java:1271)
	at com.mysql.cj.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:555)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2211)
	... 88 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 10,102,785 milliseconds ago.  The last packet sent successfully to the server was 10,102,814 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:59)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:103)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeProtocol.send(NativeProtocol.java:593)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:656)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	... 82 common frames omitted
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	at com.mysql.cj.protocol.a.SimplePacketSender.send(SimplePacketSender.java:55)
	at com.mysql.cj.protocol.a.TimeTrackingPacketSender.send(TimeTrackingPacketSender.java:49)
	at com.mysql.cj.protocol.a.NativeProtocol.send(NativeProtocol.java:584)
	... 91 common frames omitted
2020-03-10 17:15:40.110 [http-nio-8080-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: ] with root cause
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	at com.mysql.cj.protocol.a.SimplePacketSender.send(SimplePacketSender.java:55)
	at com.mysql.cj.protocol.a.TimeTrackingPacketSender.send(TimeTrackingPacketSender.java:49)
	at com.mysql.cj.protocol.a.NativeProtocol.send(NativeProtocol.java:584)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:656)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy126.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 17:15:50.517 [http-nio-8080-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 2,331,562 milliseconds ago.  The last packet sent successfully to the server was 19,203 milliseconds ago.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:557)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:735)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:674)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy126.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 17:16:13.235 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Starting MaomaoApplication on DESKTOP-18EH1AM with PID 18688 (D:\IdeaProjects\maomao\target\classes started by wx in D:\IdeaProjects\maomao)
2020-03-10 17:16:13.240 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - The following profiles are active: dev
2020-03-10 17:16:17.083 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using slf4j logging.
2020-03-10 17:16:17.135 [restartedMain] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2020-03-10 17:16:17.588 [restartedMain] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge51da81ib3hpfzxyo76|65f1b8e5, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge51da81ib3hpfzxyo76|65f1b8e5, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://47.97.210.197/maomao?useUnicode=true&characterEncoding=UTF8&useSSL=true&serverTimezone=GMT%2B8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2020-03-10 17:16:23.497 [restartedMain] DEBUG org.hibernate.SQL - select resource0_.id as id1_5_, resource0_.create_time as create_t2_5_, resource0_.description as descript3_5_, resource0_.icon as icon4_5_, resource0_.is_hide as is_hide5_5_, resource0_.level as level6_5_, resource0_.name as name7_5_, resource0_.parent_id as parent_13_5_, resource0_.sort as sort8_5_, resource0_.source_key as source_k9_5_, resource0_.source_url as source_10_5_, resource0_.type as type11_5_, resource0_.update_time as update_12_5_ from tb_resource resource0_
2020-03-10 17:16:24.763 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2020-03-10 17:16:24.776 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2020-03-10 17:16:24.777 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.26]
2020-03-10 17:16:25.103 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-03-10 17:16:27.556 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2020-03-10 17:16:27.602 [restartedMain] INFO  com.wxinnb.maomao.MaomaoApplication - Started MaomaoApplication in 15.801 seconds (JVM running for 21.796)
2020-03-10 17:17:42.613 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-03-10 17:17:42.983 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 17:17:43.225 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 17:17:43.467 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 17:17:43.605 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 17:20:09.011 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 17:20:09.238 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 17:20:09.444 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 17:20:09.581 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 17:22:00.145 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 17:22:00.378 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 17:22:00.571 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 17:22:00.703 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 17:23:31.665 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 17:23:31.889 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 17:23:32.080 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 17:23:32.209 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:02:35.649 [http-nio-8080-exec-9] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 2,343,312 milliseconds ago.  The last packet sent successfully to the server was 19,442 milliseconds ago.] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:557)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:735)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:674)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:966)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:912)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1162)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:2368)
	at com.mysql.cj.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:2360)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setReadOnly(NewProxyConnection.java:58)
	at org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:175)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:402)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:378)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:475)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:289)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy111.getOne(Unknown Source)
	at com.wxinnb.maomao.service.impl.GroupServiceImpl.getGroupById(GroupServiceImpl.java:55)
	at com.wxinnb.maomao.controller.GroupController.getGroupDetailById(GroupController.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020-03-10 18:03:03.633 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:03:03.832 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:03:04.016 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:03:04.133 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:05:46.621 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:05:46.843 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:05:47.025 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:05:47.140 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:07:52.391 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:07:52.590 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:07:52.763 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:07:52.878 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:08:29.434 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:08:29.645 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:08:29.820 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:08:29.943 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:08:56.035 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:08:56.235 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:08:56.414 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:08:56.528 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:09:31.887 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:09:32.085 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:09:32.259 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:09:32.374 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:15:54.002 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:15:54.198 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:15:54.383 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:15:54.495 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
2020-03-10 18:16:19.240 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select group0_.id as id1_4_0_, group0_.aim as aim2_4_0_, group0_.count as count3_4_0_, group0_.name as name4_4_0_, group0_.pic as pic5_4_0_, group0_.price as price6_4_0_, group0_.product_id as product_7_4_0_, group0_.product_name as product_8_4_0_, group0_.state as state9_4_0_, group0_.unit as unit10_4_0_ from tb_group group0_ where group0_.id=?
2020-03-10 18:16:19.437 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select product0_.product_id as product_1_1_0_, product0_.min_price as min_pric2_1_0_, product0_.name as name3_1_0_, product0_.number_good_reputation as number_g4_1_0_, product0_.number_orders as number_o5_1_0_, product0_.original_price as original6_1_0_, product0_.pic as pic7_1_0_, product0_.state as state8_1_0_ from t_product product0_ where product0_.product_id=?
2020-03-10 18:16:19.609 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select details0_.roll_pic_id as roll_pic1_0_, details0_.pic as pic2_0_, details0_.product_id as product_3_0_ from t_details details0_ where details0_.product_id=?
2020-03-10 18:16:19.726 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - select rollpic0_.roll_pic_id as roll_pic1_2_, rollpic0_.pic as pic2_2_, rollpic0_.product_id as product_3_2_ from t_roll_pic rollpic0_ where rollpic0_.product_id=?
